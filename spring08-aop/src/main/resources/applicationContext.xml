<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop
       http://www.springframework.org/schema/aop/spring-aop.xsd">

    <!--注册bean-->
    <bean id="userService" class="com.hua.spring08.service.UserServiceImpl"/>
    <bean id="beforeLog" class="com.hua.spring08.log.BeforeLog"/>
    <bean id="afterReturnLog" class="com.hua.spring08.log.AfterReturnLog"/>

    <!--方式一：使用原生的spring api接口-->
    <!--配置aop：需要导入aop的namespace约束-->
<!--    <aop:config>-->
<!--        &lt;!&ndash;切入点，expression="execution(要执行的位置: * * * * *)&ndash;&gt;-->
<!--        <aop:pointcut id="pointcut" expression="execution(* com.hua.spring08.service.UserServiceImpl.*(..))"/>-->

<!--        &lt;!&ndash;环绕增加&ndash;&gt;-->
<!--        <aop:advisor advice-ref="beforeLog" pointcut-ref="pointcut"/>-->
<!--        <aop:advisor advice-ref="afterReturnLog" pointcut-ref="pointcut"/>-->
<!--    </aop:config>-->

    <!--方式二：自定义切面类-->
<!--    <bean id="diy" class="com.hua.spring08.diy.DiyPointcut"/>-->
<!--    <aop:config>-->
<!--        <aop:aspect ref="diy">-->
<!--            &lt;!&ndash;切入点&ndash;&gt;-->
<!--            <aop:pointcut id="point" expression="execution(* com.hua.spring08.service.UserServiceImpl.*(..))"/>-->

<!--            &lt;!&ndash;通知&ndash;&gt;-->
<!--            <aop:before method="before" pointcut-ref="point"/>-->
<!--            <aop:after method="after" pointcut-ref="point"/>-->
<!--        </aop:aspect>-->
<!--    </aop:config>-->

    <!--方式二：使用注解方式实现AOP-->
    <!--注册切面bean-->
    <bean id="annotationPointcut" class="com.hua.spring08.diy.AnnotationPointcut"/>
    <!--
    开启支持切面注解
        proxy-target-class：
            false：JDK实现（默认
            true：cglib实现
            这个参数一般保存默认
    -->
    <aop:aspectj-autoproxy proxy-target-class="false"/>


</beans>